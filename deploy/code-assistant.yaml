kind: Namespace
apiVersion: v1
metadata:
  name: code-assistant
---
kind: Service
apiVersion: v1
metadata:
  name: llama-cpp-code-assistant-chat
  namespace: code-assistant
spec:
  clusterIP: None
  ipFamilies:
    - IPv4
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: http
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app: llama-cpp-code-assistant-chat
---
kind: Service
apiVersion: v1
metadata:
  name: llama-cpp-code-assistant-autocomplete
  namespace: code-assistant
spec:
  clusterIP: None
  ipFamilies:
    - IPv4
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: http
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app: llama-cpp-code-assistant-autocomplete
---
kind: Service
apiVersion: v1
metadata:
  name: llama-cpp-code-assistant-embedding
  namespace: code-assistant
spec:
  clusterIP: None
  ipFamilies:
    - IPv4
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: http
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app: llama-cpp-code-assistant-embedding
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: llama-cpp-code-assistant-chat
  namespace: code-assistant
spec:
  to:
    kind: Service
    name: llama-cpp-code-assistant-chat
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
  wildcardPolicy: None
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: llama-cpp-code-assistant-autocomplete
  namespace: code-assistant
spec:
  to:
    kind: Service
    name: llama-cpp-code-assistant-autocomplete
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
  wildcardPolicy: None
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: llama-cpp-code-assistant-embedding
  namespace: code-assistant
spec:
  to:
    kind: Service
    name: llama-cpp-code-assistant-embedding
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
  wildcardPolicy: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: llama-cpp-code-assistant-chat
  namespace: code-assistant
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: llama-cpp-code-assistant-autocomplete
  namespace: code-assistant
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: llama-cpp-code-assistant-embedding
  namespace: code-assistant
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llama-cpp-code-assistant-chat
  namespace: code-assistant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: llama-cpp-code-assistant-chat
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: llama-cpp-code-assistant-chat
      annotations:
        io.kubernetes.cri-o.Devices: "/dev/dri/renderD128"
    spec:
      containers:
      - name: llama-cpp-code-assistant-chat
        image: quay.io/cgruver0/che/my-code-assistant:latest
        imagePullPolicy: Always
        env:
        - name: MODEL
          value: granite3.2:2b
        - name: RAMALAMA_STORE
          value: /ramalama
        - name: LLAMA_CPP_CTX
          value: "131072"
        - name: LLAMA_CPP_GPU
          value: SYCL0
        args:
          - 'llama-server'
          - '--jinja'
          - '--model'
          - $(RAMALAMA_STORE)/models/ollama/$(MODEL)
          - '--host'
          - 0.0.0.0
          - '--n-gpu-layers'
          - '999'
          - '--flash-attn'
          - '--ctx-size'
          - $(LLAMA_CPP_CTX)
          - '--device'
          - $(LLAMA_CPP_GPU)
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: '2'
            memory: 48Gi
          requests:
            cpu: '100m'
            memory: 16Gi
        readinessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          timeoutSeconds: 5
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          timeoutSeconds: 8
          periodSeconds: 100
          successThreshold: 1
          failureThreshold: 3
          initialDelaySeconds: 120
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /ramalama
          name: llama-cpp-code-assistant-chat
      restartPolicy: Always
      volumes:
      - name: llama-cpp-code-assistant-chat
        persistentVolumeClaim:
          claimName: llama-cpp-code-assistant-chat
      nodeSelector:
        gpu-node: ""
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - llama-cpp-code-assistant-autocomplete
                - llama-cpp-code-assistant-embedding
            topologyKey: kubernetes.io/hostname
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llama-cpp-code-assistant-autocomplete
  namespace: code-assistant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: llama-cpp-code-assistant-autocomplete
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: llama-cpp-code-assistant-autocomplete
      annotations:
        io.kubernetes.cri-o.Devices: "/dev/dri/renderD128"
    spec:
      containers:
      - name: llama-cpp-code-assistant-autocomplete
        image: quay.io/cgruver0/che/my-code-assistant:latest
        imagePullPolicy: Always
        env:
        - name: MODEL
          value: granite-code:3b
        - name: RAMALAMA_STORE
          value: /ramalama
        - name: LLAMA_CPP_CTX
          value: "65536"
        - name: LLAMA_CPP_GPU
          value: SYCL0
        args:
          - 'llama-server'
          - '--jinja'
          - '--model'
          - $(RAMALAMA_STORE)/models/ollama/$(MODEL)
          - '--host'
          - 0.0.0.0
          - '--n-gpu-layers'
          - '999'
          - '--flash-attn'
          - '--ctx-size'
          - $(LLAMA_CPP_CTX)
          - '--device'
          - $(LLAMA_CPP_GPU)
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: '2'
            memory: 24Gi
          requests:
            cpu: '100m'
            memory: 16Gi
        readinessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          timeoutSeconds: 5
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          timeoutSeconds: 8
          periodSeconds: 100
          successThreshold: 1
          failureThreshold: 3
          initialDelaySeconds: 120
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /ramalama
          name: llama-cpp-code-assistant-autocomplete
      restartPolicy: Always
      volumes:
      - name: llama-cpp-code-assistant-autocomplete
        persistentVolumeClaim:
          claimName: llama-cpp-code-assistant-autocomplete
      nodeSelector:
        gpu-node: ""
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - llama-cpp-code-assistant-chat
                - llama-cpp-code-assistant-embedding
            topologyKey: kubernetes.io/hostname
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llama-cpp-code-assistant-embedding
  namespace: code-assistant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: llama-cpp-code-assistant-embedding
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: llama-cpp-code-assistant-embedding
      annotations:
        io.kubernetes.cri-o.Devices: "/dev/dri/renderD128"
    spec:
      containers:
      - name: llama-cpp-code-assistant-embedding
        image: quay.io/cgruver0/che/my-code-assistant:latest
        imagePullPolicy: Always
        env:
        - name: MODEL
          value: granite-embedding:30m
        - name: RAMALAMA_STORE
          value: /ramalama
        - name: LLAMA_CPP_CTX
          value: "512"
        - name: LLAMA_CPP_GPU
          value: SYCL0
        args:
          - 'llama-server'
          - '--embeddings'
          - '--jinja'
          - '--model'
          - $(RAMALAMA_STORE)/models/ollama/$(MODEL)
          - '--host'
          - 0.0.0.0
          - '--n-gpu-layers'
          - '999'
          - '--flash-attn'
          - '--ctx-size'
          - $(LLAMA_CPP_CTX)
          - '--device'
          - $(LLAMA_CPP_GPU)
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: '2'
            memory: 4Gi
          requests:
            cpu: '100m'
            memory: 2Gi
        readinessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          timeoutSeconds: 5
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          timeoutSeconds: 8
          periodSeconds: 100
          successThreshold: 1
          failureThreshold: 3
          initialDelaySeconds: 120
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /ramalama
          name: llama-cpp-code-assistant-embedding
      restartPolicy: Always
      volumes:
      - name: llama-cpp-code-assistant-embedding
        persistentVolumeClaim:
          claimName: llama-cpp-code-assistant-embedding
      nodeSelector:
        gpu-node: ""
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - llama-cpp-code-assistant-autocomplete
                - llama-cpp-code-assistant-chat
            topologyKey: kubernetes.io/hostname